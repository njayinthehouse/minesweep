(declare-datatypes () ((ControlPlaneRecord (mk-cpr (prefix (_ BitVec 32)) (length Int) (ad Int) (lp Int) (metric Int) (med Int) (rid Int) (bgpInternal Bool) (valid Bool)))))
(declare-const e1 ControlPlaneRecord)
(declare-const e2 ControlPlaneRecord)
(declare-const e3 ControlPlaneRecord)
(declare-const R0_BGP Int)
(declare-const R1_BGP Int)
(declare-const R2_BGP Int)
(declare-const R3_BGP Int)
(declare-const failed_0_1 Bool)
(declare-const failed_0_2 Bool)
(declare-const failed_0_3 Bool)
(declare-const r0_best_BGP ControlPlaneRecord)
(declare-const r1_best_BGP ControlPlaneRecord)
(declare-const r2_best_BGP ControlPlaneRecord)
(declare-const r3_best_BGP ControlPlaneRecord)
(assert true)
(declare-const controlfwd_0_1 Bool)
(declare-const controlfwd_0_2 Bool)
(declare-const controlfwd_0_3 Bool)
(assert (and (= datafwd_0_1 controlfwd_0_1) true))
(declare-const datafwd_0_1 Bool)
(declare-const datafwd_0_3 Bool)
(declare-const datafwd_0_2 Bool)
(assert (and (= datafwd_0_3 controlfwd_0_3) true))
(assert (and (= datafwd_0_2 controlfwd_0_2) true))
(assert (=> (valid e1) controlfwd_0_1))
(assert (=> (and (not (valid e1)) (valid e2)) controlfwd_0_2))
(assert (=> (and (not (valid e1)) (not (valid e2)) (valid e3)) controlfwd_0_3))
